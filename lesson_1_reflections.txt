use cmd to compare 2 different programs:
 FD prog1.js prog2.js

gives list of differences.

How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    Fill in your answer here

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    Fill in your answer here

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    You can save at critical points, i.e. key cut-off points in your project
	which allow you to keep track of why the program has failed. Note
	what changes in each version.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Flextibility offered by Git is generally required for it's use cases while
	those using google would generally prefer less customisation and a 
	more simplified approach.

How can you use the commands git log and git diff to view the history of files?

    By comparing 2 different commits. Use git log to get list, then compare
	current commit with previous using git diff x.js y.js.
	Changes are highlighted using colors and +/-.

How might using version control make you more confident to make changes that
could break something?

    You can note what changes you make and go back and easily test when the
	program broke to identify why.

Now that you have your workspace set up, what do you want to try using Git for?

    Fill in your answer here

How could having easy access to the entire history of a file make you a more efficient programmer in the long term?

	You can identify mistakes for effectively using version contorl and documentation.